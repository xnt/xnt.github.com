{"version":3,"sources":["Button.js","Buttons.js","Footer.js","Header.js","Emoji.js","GuestAppearance.tsx","guest-appearances.ts","Welcome.js","Home.js","Time.js","Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["Button","memo","icon","label","link","className","onClick","window","location","href","bind","this","variant","color","displayName","createButton","BUTTONS","ButtonGroup","map","button","key","data-lang","data-theme","async","src","charSet","Date","getYear","Header","React","Emoji","props","aria-label","role","emoji","GuestAppearance","linkTitle","title","target","rel","Appearance","_link","_linkTitle","_title","APPEARANCES","Welcome","Row","Col","classname","appearance","Container","Time","style","border","margin","padding","textAlign","format","ticking","timezone","createTimeObject","times","display","float","flexFlow","justifyContent","time","App","library","add","fab","basename","path","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b4abf33f.chunk.js","sourcesContent":["import React, { memo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport BsButton from 'react-bootstrap/Button';\r\n\r\n\r\nconst Button = memo(function Button({ icon, label, link }) {\r\n  const sendToLink = () => {\r\n    window.location.href = link;\r\n  };\r\n\r\n  return (\r\n    <BsButton className=\"mr-1 my-1\" onClick={sendToLink.bind(this)} variant=\"outline-light\">\r\n        {icon && (\r\n          <FontAwesomeIcon icon={['fab', icon]} color=\"white\"/>\r\n        )} {label}\r\n    </BsButton>\r\n  )\r\n})\r\n\r\nButton.propTypes = {\r\n  icon: PropTypes.string,\r\n  label: PropTypes.string.isRequired,\r\n  link: PropTypes.string.isRequired\r\n}\r\n\r\nButton.displayName = 'Button';\r\n\r\nexport default Button;\r\n","import React, { memo } from 'react';\r\nimport Button from './Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\n\r\nconst createButton = (label, link, icon=null) => {\r\n  return {'label': label, 'link': link, 'icon': icon};\r\n};\r\n\r\nconst BUTTONS = [\r\n  createButton('Resume', 'https://xnt.github.io/cv'),\r\n  createButton('Twitter', 'http://twitter.com/xnt', 'twitter'),\r\n  createButton('Facebook', 'http://fb.me/vplata', 'facebook'),\r\n  createButton('LinkedIn', 'https://www.linkedin.com/in/vrplata', 'linkedin'),\r\n  createButton('GitHub', 'https://www.github.com/xnt', 'github'),\r\n  createButton('Instagram', 'https://www.instagram.com/xnt87', 'instagram'),\r\n  createButton('Telegram', 'https://t.me/xnt87', 'telegram'),\r\n  //createButton('Keybase', 'https://keybase.io/vplata', 'keybase')\r\n];\r\n\r\nexport default memo(function Buttons() {\r\n\r\n  return (\r\n    <ButtonGroup className=\"flex-wrap my-1\">\r\n      {\r\n        BUTTONS.map((button) => {\r\n             return <Button \r\n              icon={button.icon} \r\n              key={button.label} \r\n              label={button.label} \r\n              link={button.link} />;\r\n          }\r\n        )\r\n      }\r\n    </ButtonGroup>\r\n  )\r\n});\r\n","import React, { memo } from 'react';\r\n\r\nexport default memo(function Footer() {\r\n  return (\r\n    <>\r\n    <div>\r\n      <a className=\"twitter-timeline\" data-lang=\"en\" data-theme=\"dark\" href=\"https://twitter.com/xnt?ref_src=twsrc%5Etfw\">Tweets by xnt</a> <script async src=\"https://platform.twitter.com/widgets.js\" charSet=\"utf-8\"></script>\r\n    </div>\r\n    <div>\r\n      <sub>&copy; {1900 + new Date().getYear()} Vicente Plata</sub>\r\n    </div>\r\n    </>\r\n  )\r\n});\r\n","import React from 'react';\r\n// import VpToon from './VpToon';\r\n// import Jumbotron from 'react-bootstrap/Jumbotron';\r\n\r\nconst Header = () => <h1>Vicente Plata</h1>; \r\n// memo(function Header(props) {\r\n//   return (\r\n//     {/*<Jumbotron style={{backgroundColor: \"#D799221C\", paddingLeft: \"10px\"}} fluid>\r\n//       <header>\r\n//   <VpToon />*/}\r\n        \r\n//      {/* </header>\r\n//      </Jumbotron>*/}\r\n//   );\r\n// })\r\n\r\n// Header.propTypes = {\r\n\r\n// }\r\n\r\nHeader.displayName = 'Header';\r\n\r\nexport default React.memo(Header);\r\n","import React, { memo } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Emoji = memo(function Emoji(props) {\r\n  return (\r\n    <span \r\n      aria-label={`${props.label} emoji`} \r\n      role=\"img\">\r\n        {props.emoji}\r\n    </span>\r\n  );\r\n});\r\n\r\nEmoji.propTypes = {\r\n  emoji: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Emoji;\r\n","import React from \"react\";\r\nimport { Appearance } from \"./guest-appearances\";\r\n\r\nconst GuestAppearanceComponent: React.FC<Appearance> = ({link, linkTitle, title}) => (\r\n  <li>{title} [<a href={link} target=\"_blank\" rel=\"noopener noreferrer\">{linkTitle}</a>]</li>\r\n);\r\n\r\nexport const GuestAppearance = React.memo(GuestAppearanceComponent);","export class Appearance {\r\n  link: string;\r\n  linkTitle: string;\r\n  title: string;\r\n\r\n  constructor(_link: string, _linkTitle: string, _title: string) {\r\n    this.link = _link;\r\n    this.linkTitle = _linkTitle;\r\n    this.title = _title;\r\n  }\r\n}\r\n\r\nexport const APPEARANCES = [\r\n  new Appearance(\r\n    \"https://open.spotify.com/episode/6gFUO57cKMQtWgGH8DwfUf\",\r\n    \"Podcast\",\r\n    \"Chile, Mole y Tech. E31: Creando Equipos en Tech\"\r\n  ),\r\n  new Appearance(\r\n    \"https://www.youtube.com/watch?v=X_4D8mppVeY\",\r\n    \"Video\",\r\n    \"The Dojo: Conviértete en un Buen Líder Técnico\"\r\n  ),\r\n  new Appearance(\r\n    \"https://www.youtube.com/watch?v=fX1YUJXWWwU\",\r\n    \"Talk\",\r\n    \"NearsoftCon 2018: El Truco que me ayudó a desbloquear superpoderes\"\r\n  ),\r\n  new Appearance(\r\n    \"https://www.youtube.com/watch?v=4MZ6vk5q88g\",\r\n    \"Talk\",\r\n    \"Nearsoft Talks: Communication, motivation and self-management in the remote age\"\r\n  ),\r\n  new Appearance(\r\n    \"https://www.youtube.com/watch?v=SSA4MMQGKns\",\r\n    \"Video\",\r\n    \"The Dojo: Desarrolla tu Carrera en Tecnología\"\r\n  ),\r\n  new Appearance(\r\n    \"https://www.youtube.com/watch?v=dEzUr_3rU2U\",\r\n    \"Live\",\r\n    \"Devz Live: Historias de Horrores y Errores en tu Carrera Profesional\"\r\n  ),\r\n  new Appearance(\r\n    \"https://www.youtube.com/watch?v=IHrqenVs-dg\",\r\n    \"Video\",\r\n    \"The Dojo: 20 consejos para mejorar como desarrollador\"\r\n  ),\r\n  new Appearance(\r\n    \"https://www.facebook.com/DevzCommunity/videos/2706211403001621\",\r\n    \"Live\",\r\n    \"Devz Live: AMA\"\r\n  ),\r\n  new Appearance(\"https://www.youtube.com/watch?v=AvtHJjXAFkQ\", \"Live\", \"Cafe con amigos\"),\r\n];\r\n","import React, { memo } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport Emoji from \"./Emoji\";\r\nimport { GuestAppearance } from \"./GuestAppearance\";\r\nimport { APPEARANCES } from \"./guest-appearances\";\r\n\r\nconst Welcome = memo(function Welcome(props) {\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <h2>Welcome</h2>\r\n        <p className=\"pb-2\">\r\n          Thank you for stopping by <Emoji label=\"hi\" emoji=\"👋\" />.\r\n        </p>\r\n        <h3>\r\n          About Me <Emoji label=\"Mexican and Canadian flags\" emoji=\"🇲🇽🇨🇦\" />\r\n        </h3>\r\n        <p className=\"pb-2\">\r\n          My name is <b>Vicente Plata</b>. I'm a Software Engineer{\" \"}\r\n          <Emoji label=\"technologist\" emoji=\"👨‍💻\" /> with an emphasis in:\r\n        </p>\r\n        <ul>\r\n          <li>Leadership-oriented tasks and roles</li>\r\n          <li>Advisory roles regarding remote software engineering, distributed workforce, and community building</li>\r\n          <li>Mentoring latin american engineers with professional development topics \r\n            (<a href=\"https://calendly.com/vplata/mentorship\"><Emoji label=\"Calendar\" emoji=\"📅\" /> Agenda una mentor&iacute;a</a>)</li>\r\n        </ul>\r\n        <h3>Day to day</h3>\r\n        <p className=\"pb-2\">\r\n          On a day-to-day 9-to-5 basis, I work as a Senior Engineering Lead at{\" \"}\r\n          <a\r\n            href=\"https://forhims.com\"\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n          >\r\n            hims\r\n          </a>{\" \"}\r\n          and{\" \"}\r\n          <a\r\n            href=\"https://forhers.com\"\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n          >\r\n            hers\r\n          </a>\r\n          . My team primarily takes care of the UI in the\r\n          <Emoji label=\"doctor\" emoji=\"👩‍⚕️\" /> EMR/Doctor experience that our\r\n          physicians use to validate, assess and (if appropriate) dispatch your\r\n          prescriptions. Check us out!\r\n        </p>\r\n        <h3>Skills</h3>\r\n        <p>\r\n          I'm not that much of a fan of technology lists. Languages and\r\n          technologies are basically tools to get things done. I'd rather talk\r\n          about soft skills and general areas of expertise:\r\n        </p>\r\n        <ul>\r\n          <li>Remote Engineering Management and Leadership</li>\r\n          <li>Security</li>\r\n          <li>Automation</li>\r\n          <li>Accessibility</li>\r\n          <li>Best Practices</li>\r\n        </ul>\r\n        <p className=\"pb-2\">\r\n          If you insist, though, check my GitHub or LinkedIn profiles. TLDR:\r\n        </p>\r\n        <ul>\r\n          <li>Java</li>\r\n          <li>C#</li>\r\n          <li>PowerShell</li>\r\n          <li>Ruby/Rails</li>\r\n          <li>JavaScript + TypeScript (React, React Native)</li>\r\n        </ul>   \r\n        <h3>Guest Appearances</h3>\r\n        <p classname=\"pb-2\">\r\n          Some folks have been kind enough to invite me to their Lives, Podcasts \r\n          and similar events. Most of them in Spanish. FYI:\r\n        </p>\r\n        <ul>\r\n          {APPEARANCES.map(appearance => \r\n            <GuestAppearance \r\n              link={appearance.link}\r\n              linkTitle={appearance.linkTitle}\r\n              title={appearance.title} />)}\r\n        </ul>\r\n        <h3>About this website</h3>\r\n        <p className=\"pb-2\">\r\n          I'm rebuilding my website because of reasons. This might take a while.\r\n          Until then, check out the buttons at the top{\" \"}\r\n          <Emoji label=\"pointing up\" emoji=\"☝️\" />.\r\n        </p>\r\n      </Col>\r\n    </Row>\r\n  );\r\n});\r\n\r\nWelcome.displayName = \"Welcome\";\r\n\r\nexport default Welcome;\r\n","import React, { memo } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Buttons from './Buttons';\r\nimport Footer from './Footer';\r\nimport Header from './Header';\r\nimport Welcome from './Welcome';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nexport default memo(function Home() {\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <Buttons />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <Header />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <Welcome />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <Footer />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n});","import React, { memo } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Clock from 'react-live-clock'\r\n\r\nconst Time = memo(function Time(props) {\r\n  return (\r\n    <div style={{ border: \"gray 1px solid\", margin: \"5px\", padding: \"10px\", textAlign: \"center\" }}>\r\n      <h3>{props.label}</h3>\r\n      <Clock format={'HH:mm:ss'} ticking={true} timezone={props.timezone} />\r\n    </div>\r\n  )\r\n})\r\n\r\nTime.propTypes = {\r\n  label: PropTypes.string,\r\n  timezone: PropTypes.string\r\n}\r\n\r\nexport default Time\r\n","import React, { memo } from 'react';\r\nimport Time from './Time';\r\n\r\nconst createTimeObject = (label, timezone) => {\r\n  return {\r\n    label: label,\r\n    timezone: timezone\r\n  };\r\n}\r\n\r\nconst times = [\r\n  createTimeObject(\"Toronto/ KW/ Montreal\", \"America/Toronto\"),\r\n  createTimeObject(\"San Francisco / Vancouver\", \"America/Los_Angeles\"),\r\n  createTimeObject(\"Vienna\", \"Europe/Vienna\"),\r\n  createTimeObject(\"Hermosillo\", \"America/Hermosillo\"),\r\n  createTimeObject(\"Corrientes\", \"America/Argentina/Buenos_Aires\")\r\n];\r\n\r\nexport default memo(function Dashboard() {\r\n  return (\r\n    <div style={{ display: \"inline\", float: \"left\" }}>\r\n      <h1>Dashboard</h1>\r\n      <h2>Times</h2>\r\n      <div style={{display: \"flex\", flexFlow: \"row wrap\", justifyContent: \"space-around\"}}>\r\n        {\r\n          times.map((time) => {\r\n            return <Time key={time.label} label={time.label} timezone={time.timezone} />\r\n          })\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n});\r\n","import React from 'react';\r\nimport Home from './Home';\r\nimport { fab } from '@fortawesome/free-brands-svg-icons';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport './App.css';\r\nimport Dashboard from \"./Dashboard\";\r\nimport {\r\n  HashRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction App() {\r\n  // fa init\r\n  library.add(fab);\r\n\r\n  return (\r\n    <Router basename='/'>\r\n      <Switch>\r\n        <Route path=\"/db\">\r\n          <Dashboard />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <Home />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}