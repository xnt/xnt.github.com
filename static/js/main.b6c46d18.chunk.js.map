{"version":3,"sources":["Button.js","Buttons.js","Footer.js","VpToon.js","Header.js","Welcome.js","App.js","serviceWorker.js","index.js","img/vpToon.png"],"names":["Button","memo","props","react_default","a","createElement","style","padding","href","link","rel","target","className","icon","index_es","color","marginRight","label","createButton","arguments","length","undefined","BUTTONS","map","button","src_Button","key","margin","Date","getYear","VpToon","alt","src","vpToon","marginTop","width","Header","textAlign","src_VpToon","Welcome","App","library","add","fab","src_Header","src_Welcome","src_Buttons","src_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"6LAsBeA,EAlBAC,eAAK,SAAgBC,GAClC,OACEC,EAAAC,EAAAC,cAAA,QAAMC,MAAO,CAACC,QAAS,QACrBJ,EAAAC,EAAAC,cAAA,KAAGG,KAAMN,EAAMO,KAAMC,IAAI,sBAAsBC,OAAO,SAASC,UAAU,cACtEV,EAAMW,MACLV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAiBD,KAAM,CAAC,MAAOX,EAAMW,MAAOE,MAAM,QAAQT,MAAO,CAACU,YAAa,SAC9Ed,EAAMe,UCPXC,EAAe,SAACD,EAAOR,GAC3B,MAAO,CAACQ,MAASA,EAAOR,KAAQA,EAAMI,KADSM,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAT,OAIlCG,EAAU,CACdJ,EAAa,SAAU,4BACvBA,EAAa,UAAW,yBAA0B,WAClDA,EAAa,WAAY,sBAAuB,YAChDA,EAAa,WAAY,sCAAuC,YAChEA,EAAa,SAAU,6BAA8B,UACrDA,EAAa,YAAa,kCAAmC,aAC7DA,EAAa,UAAW,4BAA6B,YAGxCjB,iBAAK,WAElB,OACEE,EAAAC,EAAAC,cAAA,WAEIiB,EAAQC,IAAI,SAACC,GACR,OAAOrB,EAAAC,EAAAC,cAACoB,EAAD,CACNZ,KAAMW,EAAOX,KACba,IAAKF,EAAOP,MACZA,MAAOO,EAAOP,MACdR,KAAMe,EAAOf,YCzBZR,iBAAK,WAClB,OACEE,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAACqB,OAAQ,SACnBxB,EAAAC,EAAAC,cAAA,mBAAa,MAAO,IAAIuB,MAAOC,UAA/B,qCCISC,EANA7B,eAAK,SAAgBC,GAClC,OACEC,EAAAC,EAAAC,cAAA,OAAK0B,IAAI,WAAWC,IAAKC,IAAQ3B,MAAO,CAAC4B,UAAW,OAAQC,MAAO,aCaxDC,EAfAnC,eAAK,SAAgBC,GAClC,OACEC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAC+B,UAAW,WACtBlC,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAACiC,EAAD,MACAnC,EAAAC,EAAAC,cAAA,+BCwBOkC,EA9BCtC,eAAK,SAAiBC,GACpC,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,uBACaF,EAAAC,EAAAC,cAAA,0BADb,4FAIAF,EAAAC,EAAAC,cAAA,iFAEKF,EAAAC,EAAAC,cAAA,KAAGG,KAAK,sBAAsBE,IAAI,sBAAsBC,OAAO,UAA/D,QAFL,QAGWR,EAAAC,EAAAC,cAAA,KAAGG,KAAK,sBAAsBE,IAAI,sBAAsBC,OAAO,UAA/D,QAHX,qLAOAR,EAAAC,EAAAC,cAAA,+SAMAF,EAAAC,EAAAC,cAAA,iICASmC,MAdf,WAIE,OAFAC,IAAQC,IAAIC,KAGVxC,EAAAC,EAAAC,cAAA,OAAKO,UAAU,OACbT,EAAAC,EAAAC,cAACuC,EAAD,MACAzC,EAAAC,EAAAC,cAACwC,EAAD,MACA1C,EAAAC,EAAAC,cAACyC,EAAD,MACA3C,EAAAC,EAAAC,cAAC0C,EAAD,QCPcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOnD,EAAAC,EAAAC,cAACkD,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,kCEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.b6c46d18.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst Button = memo(function Button(props) {\n  return (\n    <span style={{padding: '5px'}}>\n      <a href={props.link} rel=\"noopener noreferrer\" target='_blank' className=\"linkButton\">\n        {props.icon && (\n          <FontAwesomeIcon icon={['fab', props.icon]} color=\"white\" style={{marginRight: '5px'}} />\n        )}{props.label}\n      </a>\n    </span>\n  )\n})\n\nButton.propTypes = {\n  icon: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  link: PropTypes.string.isRequired\n}\n\nexport default Button\n","import React, { memo } from 'react';\nimport Button from './Button';\n\nconst createButton = (label, link, icon=null) => {\n  return {'label': label, 'link': link, 'icon': icon};\n};\n\nconst BUTTONS = [\n  createButton('Resume', 'https://xnt.github.io/cv'),\n  createButton('Twitter', 'http://twitter.com/xnt', 'twitter'),\n  createButton('Facebook', 'http://fb.me/vplata', 'facebook'),\n  createButton('LinkedIn', 'https://www.linkedin.com/in/vrplata', 'linkedin'),\n  createButton('GitHub', 'https://www.github.com/xnt', 'github'),\n  createButton('Instagram', 'https://www.instagram.com/xnt87', 'instagram'),\n  createButton('Keybase', 'https://keybase.io/vplata', 'keybase')\n];\n\nexport default memo(function Buttons() {\n\n  return (\n    <div>\n      {\n        BUTTONS.map((button) => {\n             return <Button \n              icon={button.icon} \n              key={button.label} \n              label={button.label} \n              link={button.link} />;\n          }\n        )\n      }\n    </div>\n  )\n});\n","import React, { memo } from 'react';\n\nexport default memo(function Footer() {\n  return (\n    <div style={{margin: '25px'}}>\n      <sub>&copy; {1900 + new Date().getYear()} Vicente Plata</sub>\n    </div>\n  )\n});\n","import React, { memo } from 'react';\nimport vpToon  from './img/vpToon.png';\n\nconst VpToon = memo(function VpToon(props) {\n  return (\n    <img alt='portrait' src={vpToon} style={{marginTop: '15px', width: '200px'}} />\n  );\n});\n\nexport default VpToon;\n","import React, { memo } from 'react';\nimport VpToon from './VpToon';\n\nconst Header = memo(function Header(props) {\n  return (\n    <div style={{textAlign: 'center'}}>\n      <header>\n        <VpToon />\n        <h1>Vicente Plata</h1>\n      </header>\n    </div>\n  );\n})\n\nHeader.propTypes = {\n\n}\n\nexport default Header\n\n","import React, { memo } from 'react';\n\nconst Welcome = memo(function Welcome(props) {\n  return (\n    <div>\n      <h2>Welcome</h2>\n      <p>Thank you for stopping by.</p>\n      <p>\n        My name is <b>Vicente Plata</b>. I'm a Software Engineer with recent experience\n        in leadership-oriented tasks and roles.\n      </p>\n      <p>\n        On a day-to-day 9-to-5 basis, I work as a Senior Engineering Lead \n        at <a href=\"https://forhims.com\" rel=\"noopener noreferrer\" target=\"_blank\">hims\n        </a> and <a href=\"https://forhers.com\" rel=\"noopener noreferrer\" target=\"_blank\">hers</a>. \n        My team primarily takes care of the UI in the EMR/Doctor experience that our physicians use \n        to validate, assess and (if appropriate) dispatch your prescriptions. Check us out!\n      </p>\n      <p>\n        I'm not that much of a fan of technology lists/bullets. I'd rather talk about soft\n        skills and general areas of expertise (security, automation, best practices). But if you\n        really want to know, check my GitHub or LinkedIn profiles. TLDR: Java, C#, PowerShell,\n        Ruby/Rails, JavaScript (React).\n      </p>\n      <p>\n        I'm rebuilding my website because of reasons. This might take a while. Until\n        then, check out:\n      </p>\n    </div>\n  )\n});\n\nexport default Welcome;\n","import React from 'react';\nimport Buttons from './Buttons';\nimport Footer from './Footer';\nimport Header from './Header';\nimport Welcome from './Welcome';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { library } from '@fortawesome/fontawesome-svg-core';\n\nimport './App.css';\n\nfunction App() {\n  // fa init\n  library.add(fab);\n  \n  return (\n    <div className=\"App\">\n      <Header />\n      <Welcome />\n      <Buttons />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/vpToon.b0a126e4.png\";"],"sourceRoot":""}