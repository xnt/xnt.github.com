{"version":3,"sources":["img/vpToon.png","Button.js","Buttons.js","Footer.js","VpToon.js","Header.js","Emoji.js","Welcome.js","Home.js","Time.js","Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Button","memo","_ref","icon","label","link","react_default","a","createElement","esm_Button","className","onClick","window","location","href","bind","this","variant","index_es","color","displayName","createButton","arguments","length","undefined","BUTTONS","ButtonGroup","map","button","src_Button","key","Date","getYear","VpToon","props","alt","src","vpToon","style","marginTop","width","Header","Jumbotron","src_VpToon","Emoji","aria-label","concat","role","emoji","Welcome","Row","Col","src_Emoji","rel","target","Container","src_Buttons","src_Header","src_Welcome","src_Footer","Time","border","margin","padding","textAlign","lib_default","format","ticking","timezone","createTimeObject","times","display","float","flexFlow","justifyContent","time","src_Time","App","library","add","fab","react_router_dom","basename","react_router","path","src_Dashboard","src_Home","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c16f46e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/vpToon.b0a126e4.png\";","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport BsButton from 'react-bootstrap/Button';\n\n\nconst Button = memo(function Button({ icon, label, link }) {\n  const sendToLink = () => {\n    window.location.href = link;\n  };\n\n  return (\n    <BsButton className=\"mr-1 my-1\" onClick={sendToLink.bind(this)} variant=\"secondary\">\n        {icon && (\n          <FontAwesomeIcon icon={['fab', icon]} color=\"white\"/>\n        )} {label}\n    </BsButton>\n  )\n})\n\nButton.propTypes = {\n  icon: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  link: PropTypes.string.isRequired\n}\n\nButton.displayName = 'Button';\n\nexport default Button;\n","import React, { memo } from 'react';\nimport Button from './Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\n\nconst createButton = (label, link, icon=null) => {\n  return {'label': label, 'link': link, 'icon': icon};\n};\n\nconst BUTTONS = [\n  createButton('Resume', 'https://xnt.github.io/cv'),\n  createButton('Twitter', 'http://twitter.com/xnt', 'twitter'),\n  createButton('Facebook', 'http://fb.me/vplata', 'facebook'),\n  createButton('LinkedIn', 'https://www.linkedin.com/in/vrplata', 'linkedin'),\n  createButton('GitHub', 'https://www.github.com/xnt', 'github'),\n  createButton('Instagram', 'https://www.instagram.com/xnt87', 'instagram'),\n  createButton('Keybase', 'https://keybase.io/vplata', 'keybase')\n];\n\nexport default memo(function Buttons() {\n\n  return (\n    <ButtonGroup className=\"flex-wrap my-1\">\n      {\n        BUTTONS.map((button) => {\n             return <Button \n              icon={button.icon} \n              key={button.label} \n              label={button.label} \n              link={button.link} />;\n          }\n        )\n      }\n    </ButtonGroup>\n  )\n});\n","import React, { memo } from 'react';\n\nexport default memo(function Footer() {\n  return (\n    <div>\n      <sub>&copy; {1900 + new Date().getYear()} Vicente Plata</sub>\n    </div>\n  )\n});\n","import React, { memo } from 'react';\nimport vpToon  from './img/vpToon.png';\n\nconst VpToon = memo(function VpToon(props) {\n  return (\n    <img alt='portrait' src={vpToon} style={{marginTop: '15px', width: '200px'}} />\n  );\n});\n\nVpToon.displayName = 'VpToon';\n\nexport default VpToon;\n","import React, { memo } from 'react';\nimport VpToon from './VpToon';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nconst Header = memo(function Header(props) {\n  return (\n    <Jumbotron>\n      <header>\n        <VpToon />\n        <h1>Vicente Plata</h1>\n      </header>\n    </Jumbotron>\n  );\n})\n\nHeader.propTypes = {\n\n}\n\nHeader.displayName = 'Header';\n\nexport default Header\n","import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Emoji = memo(function Emoji(props) {\n  return (\n    <span \n      aria-label={`${props.label} emoji`} \n      role=\"img\">\n        {props.emoji}\n    </span>\n  );\n});\n\nEmoji.propTypes = {\n  emoji: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired\n};\n\nexport default Emoji;\n","import React, { memo } from 'react';\nimport Emoji from './Emoji';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nconst Welcome = memo(function Welcome(props) {\n  return (\n    <Row>\n      <Col>\n        <h2>Welcome</h2>\n        <p>Thank you for stopping by <Emoji label=\"hi\" emoji=\"👋\" />.</p>\n        <h3>About Me <Emoji label=\"Mexican and Canadian flags\" emoji=\"🇲🇽🇨🇦\" /></h3>\n        <p>\n          My name is <b>Vicente Plata</b>. I'm a Software Engineer \n          <Emoji label=\"technologist\" emoji=\"👨‍💻\" /> with an emphasis in leadership-oriented tasks \n          and roles.\n        </p>\n        <h3>Day to day</h3>\n        <p>\n          On a day-to-day 9-to-5 basis, I work as a Senior Engineering Lead \n          at <a href=\"https://forhims.com\" rel=\"noopener noreferrer\" target=\"_blank\">hims\n          </a> and <a href=\"https://forhers.com\" rel=\"noopener noreferrer\" target=\"_blank\">hers</a>. \n          My team primarily takes care of the UI in the \n          <Emoji label=\"doctor\" emoji=\"👩‍⚕️\" /> EMR/Doctor experience that our physicians use to validate, \n          assess and (if appropriate) dispatch your prescriptions. Check us out!\n        </p>\n        <h3>Skills</h3>\n        <p>\n          I'm not that much of a fan of technology lists. Languages and technologies are \n          basically tools to get things done. I'd rather talk about soft skills and general \n          areas of expertise:\n        </p>\n        <ul>\n          <li>Remote Engineering Management and Leadership</li>\n          <li>Security</li>\n          <li>Automation</li>\n          <li>Accessibility</li>\n          <li>Best Practices</li>\n        </ul>\n        <p>\n          If you insist, though, check my GitHub or LinkedIn profiles. TLDR:\n        </p>\n        <ul>\n          <li>Java</li>\n          <li>C#</li>\n          <li>PowerShell</li>\n          <li>Ruby/Rails</li>\n          <li>JavaScript (React)</li>\n        </ul>\n        <h3>About this website</h3>\n        <p>\n          I'm rebuilding my website because of reasons. This might take a while. Until\n          then, check out the buttons at the top <Emoji label=\"pointing up\" emoji=\"☝️\" />.\n        </p>\n    </Col>\n    </Row>\n  )\n});\n\nWelcome.displayName = 'Welcome';\n\nexport default Welcome;\n","import React, { memo } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Buttons from './Buttons';\nimport Footer from './Footer';\nimport Header from './Header';\nimport Welcome from './Welcome';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nexport default memo(function Home() {\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <Buttons />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Header />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Welcome />\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Footer />\n        </Col>\n      </Row>\n    </Container>\n  )\n});","import React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport Clock from 'react-live-clock'\n\nconst Time = memo(function Time(props) {\n  return (\n    <div style={{ border: \"gray 1px solid\", margin: \"5px\", padding: \"10px\", textAlign: \"center\" }}>\n      <h3>{props.label}</h3>\n      <Clock format={'HH:mm:ss'} ticking={true} timezone={props.timezone} />\n    </div>\n  )\n})\n\nTime.propTypes = {\n  label: PropTypes.string,\n  timezone: PropTypes.string\n}\n\nexport default Time\n","import React, { memo } from 'react';\nimport Time from './Time';\n\nconst createTimeObject = (label, timezone) => {\n  return {\n    label: label,\n    timezone: timezone\n  };\n}\n\nconst times = [\n  createTimeObject(\"Toronto/ KW/ Montreal\", \"America/Toronto\"),\n  createTimeObject(\"San Francisco / Vancouver\", \"America/Los_Angeles\"),\n  createTimeObject(\"Vienna\", \"Europe/Vienna\"),\n  createTimeObject(\"Hermosillo\", \"America/Hermosillo\"),\n  createTimeObject(\"Corrientes\", \"America/Argentina/Buenos_Aires\")\n];\n\nexport default memo(function Dashboard() {\n  return (\n    <div style={{ display: \"inline\", float: \"left\" }}>\n      <h1>Dashboard</h1>\n      <h2>Times</h2>\n      <div style={{display: \"flex\", flexFlow: \"row wrap\", justifyContent: \"space-around\"}}>\n        {\n          times.map((time) => {\n            return <Time key={time.label} label={time.label} timezone={time.timezone} />\n          })\n        }\n      </div>\n    </div>\n  )\n});\n","import React from 'react';\nimport Home from './Home';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport './App.css';\nimport Dashboard from \"./Dashboard\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  // fa init\n  library.add(fab);\n\n  return (\n    <Router basename='/'>\n      <Switch>\n        <Route path=\"/db\">\n          <Dashboard />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}